import os
import numpy as np
import tensorflow as tf
from ml.t0_virus_class import FLAGS, get_data, VirusModel


def run_training(train_dir=FLAGS.train_dir,
                 dataset=FLAGS.dataset,
                 seq_len=FLAGS.seq_len,
                 num_hidden=FLAGS.num_hidden):
    train_x, train_y, _ = get_data(train_dir, dataset, seq_len)
    vm = VirusModel(seq_len, num_hidden)

    with tf.Session() as sess:
        sess.run(tf.global_variables_initializer())

        saver = tf.train.Saver()
        save_path = os.path.join(FLAGS.train_dir, 'train')

        try:
            os.mkdir(save_path)
        except FileExistsError:
            pass

        save_path = os.path.join(save_path, 'model.ckpt')
        writer = tf.summary.FileWriter('.venv/log', sess.graph)

        batch_size = 50
        num_batch = int(len(train_x) / batch_size)

        for i in range(100):
            ptr = 0
            for j in range(num_batch):
                inp = train_x[ptr:ptr+batch_size]
                out = train_y[ptr:ptr+batch_size]
                ptr += batch_size

                summary, _ = sess.run([vm.summary, vm.opt],
                                      feed_dict={vm.X: inp, vm.Y: out})
                writer.add_summary(summary, i*num_batch + j)

            if len(train_x) % batch_size != 0:
                    inp, out = train_x[ptr:], train_y[ptr:]
                    summary, _ = sess.run([vm.summary, vm.opt],
                                          feed_dict={vm.X: inp, vm.Y: out})
                    writer.add_summary(summary, i*num_batch + j)

            errors = sess.run(vm.err, feed_dict={vm.X: train_x, vm.Y: train_y})
            print("Epoch - %d, %.1f" % (i, errors * 100))

            if (i + 1) % 10 == 0:
                saver.save(sess, save_path, global_step=i+1)


def main(_):
    run_training()


if __name__ == '__main__':
    tf.app.run()
