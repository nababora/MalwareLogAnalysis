import math
import matplotlib.pyplot as plt
from db1_malware_db import Malware, Branch
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker


def norm_addr(result):
    branches = list(map(lambda x: list(x), result))

    base = branches[0][0] & 0xFFFF0000
    for i in range(len(branches)):
        src, dst = branches[i]
        if (dst & 0xFFFF0000) > base:
            branches[i][1] = base

    size = len(branches) * 2
    avg = sum(map(lambda x: x[0] + x[1], branches)) / size

    dev = lambda x: (x - avg) ** 2
    var = sum(map(lambda x: sum(map(dev, x)), branches)) / size
    sig = math.sqrt(var)

    norm = lambda x: (x - avg) / sig
    norm_branch = map(lambda x: map(norm, x), branches)

    addr = []
    for src_addr, dst_addr in norm_branch:
        addr.append(src_addr)
        addr.append(dst_addr)

    return addr


engine = create_engine('sqlite:///subdata/malware.db')

Session = sessionmaker()
Session.configure(bind=engine)

sess = Session()

result = sess.query(Branch.src_addr, Branch.dst_addr) \
            .filter(Branch.malware_id == 461) \
            .all()

plt.subplot(211)
plt.plot(norm_addr(result))

result = sess.query(Branch.src_addr, Branch.dst_addr) \
            .filter(Branch.malware_id == 466) \
            .all()

plt.subplot(212)
plt.plot(norm_addr(result))

plt.show()
