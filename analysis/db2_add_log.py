import os
import re
import time
from multiprocessing import Process, Queue, Lock
from malware_db import Base, Malware, Branch
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

def writer(proc_id, lock, queue, output):
    engine = create_engine('sqlite:///subdata/malware.db')

    Session = sessionmaker()
    Session.configure(bind = engine)

    sess = Session()

    while True:
        log = queue.get()
        if log is None:
            output.put(proc_id)
            break

        print('proc %d : log %s' % (proc_id, log))
        with open('../logs/%s' % log) as f:
            name = f.readline()
            name = re.findall(r'\[(.*)\]', name)[0]

            mal = Malware(name)
            sess.add(mal)

            lock.acquire()
            sess.commit()
            lock.release()

            i = 0
            for branch in f.readlines():
                i += 1

                if branch.startswith('++'):
                    sess.add(ind)
                else:
                    tmp = branch[1:-1].split(',')
                    if len(tmp) == 4:
                        src, dst, dll, sym = tmp
                    elif len(tmp) == 3:
                        src, dst, dll = tmp
                        sym = ''

                    src = int(src, 16)
                    dst = int(dst, 16)

                    ind = Branch(mal.id, i, src, dst, dll, sym)

                    sess.add(ind)

lock = Lock()
queue = Queue()
output = Queue()
multiproc_cnt = 10

for i in range(multiproc_cnt):
    proc = Process(target = writer, args = (i, lock, queue, output))
    proc.daemon = True
    proc.start()

for log in os.listdir('../logs'):
    queue.put(log)

for i in range(multiproc_cnt):
    queue.put(None)

end = 0
target_sum = sum(range(multiproc_cnt))

while end != target_sum:
    end += output.get()
